/*
Player groups configuration file
---------------------------------

This file defines "player groups" and their privileges.

Each group has its id and name, lists of available commands and other
permissions, and a list of other groups it inherits from.


Group settings
--------------
<id>
Unique group number. The only required field.

<name>
Any string. If empty, defaults to "Group <id>". It is used in several @who
commands.

<level>
Equivalent of GM level, which was used in revisions before r15572. You can
set it to any number, but usually it's between 0 (default) and 99. Members of
groups with lower level can not perform some actions/commands (like @kick) on
members of groups with higher level. It is what script command getgmlevel()
returns. Group level can also be used to override trade restrictions
(db/item_trade.txt).

<commands>
A group of settings
<command name> : <bool>
or
<commandname> : [ <bool>, <bool> ]
First boolean value is for atcommand, second one for charcommand. If set to
true, group can use command. If only atcommand value is provided, false is
assumed for charcommand. If a command name is not included, false is assumed for
both atcommand and charcommand.
For a full list of available commands, see: doc/atcommands.txt.
Command names must not be aliases.

<log_commands>
Boolean value. If true then all commands used by the group will be logged to
atcommandlog. If setting is omitted in a group definition, false is assumed.
Requires 'log_commands' to be enabled in 'conf/logs.conf'.

<permissions>
A group of settings
<permission> : <bool>
If a permission is not included, false is assumed.
For a full list of available permissions, see: doc/permissions.txt

<inherit>
A list of group names that given group will inherit commands and permissions
from. Group names are case-sensitive.

Inheritance results
-------------------
Both multiple inheritance (Group 2 -> Group 1 and Group 3 -> Group 1) and
recursive inheritance (Group 3 -> Group 2 -> Group 1) are allowed.

Inheritance rules should not create cycles (eg Group 1 inherits from Group 2,
and Group inherits from Group 1 at the same time). Configuration with cycles is
considered faulty and can't be processed fully by server.

Command or permission is inherited ONLY if it's not already defined for the
group.
If group inherits from multiple groups, and the same command or permission is
defined for more than one of these groups, it's undefined which one will be
inherited.

Syntax
------
This config file uses libconfig syntax:
http://www.hyperrealm.com/libconfig/libconfig_manual.html#Configuration-Files
*/

groups: (
{
	id: 0 /* group 0 is the default group for every new account */
	name: "Tester"
	level: 0
	inherit: ( /*empty list*/ )
	commands: {
		duel: true
		accept: true
		reject: true
		leave: true
		whogm: true
		email: true
		commands: true
		help: true
		rates: true
		uptime: true
		showdelay: true
		mobinfo: true
		iteminfo: true
		whodrops: true
		time: true
		jailtime: true
		hominfo: true
		homstats: true
		showexp: true
		showzeny: true
		whereis: true
		refresh: true
		noask: true
		autoloot: true
		alootid: true
		autoloottype: true
		request: true
		breakguild: true
		channel: true
		tee: true
		log: true
		version: true
		jumpto: true
		tonpc: true
		save: true
		load: true
		hide: true
		warp: true
		jump: true
		heal: true
		alive: true
		dropall: true
		item: true
		item2: true
		produce: true
		refine: true
		zeny: true
		storage: true
		repairall: true
		storeall: true
		itemreset: true
		clearstorage: true
		killable: true
		speed: true
		slide: true
		blvl: true
		jlvl: true
		agi: true
		vit: true
		int: true
		str: true
		dex: true
		luk: true
		allstats: true
		streset: true
	}
	permissions: {
		/* without this basic permissions regular players could not
		trade or party */
		can_trade: true
		 can_party: true
	}
},
{
	id: 1
	name: "Super Tester"
	inherit: ( "Tester" ) /* can do everything Testers can and more */
	level: 2
	commands: {
		where: [true, true]
		who: true
		who2: true
		who3: true
		whomap: true
		whomap2: true
		whomap3: true
		users: true
		mapinfo: true
		gat: true
		mobsearch: true
		idsearch: true
		showmobs: true
		skillid: true
		skilltree: true
		monsterignore: true
		follow: true
		heal: [true, true]
		alive: [true, true]
		monster: true
		monstersmall: true
		monsterbig: true
		killmonster2: true
		clone: [true, true]
		slaveclone: [true, true]
		evilclone: [true, true]
		cleargstorage: true
		killer: true
	}
	permissions: {
		show_client_version: true
	}
},
{
	id: 99
	name: "Developer"
	level: 99
	inherit: ( "Super Tester" )
	commands: {
		/* not necessary due to all_commands: true */
	}
	log_commands: true
	permissions: {
		can_trade_bound: true
		can_party: true
		all_skill: false
		all_equipment: false
		skill_unconditional: false
		use_check: true
		use_changemaptype: true
		all_commands: true
		hchsys_admin: true
	}
}
)
